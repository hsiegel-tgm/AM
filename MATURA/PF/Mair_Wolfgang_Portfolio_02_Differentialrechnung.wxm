/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 13.04.2 ] */

/* [wxMaxima: title   start ]
Portfolio 02 Differentialrechnung
   [wxMaxima: title   end   ] */

/* [wxMaxima: section start ]
Differenzenquozient und Differentialquozient
   [wxMaxima: section end   ] */

/* [wxMaxima: fold    start ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Unter dem Differentialquotient/erste Ableitung von f(x0) versteht man 
den Grenzwert der Folge der Differenzen im quotienten. Wenn dieser Grenzwert 
exestiert, dann heißt f(x) an der Stelle x0 ist differenzierbar.

Der Anstieg der Tangente ist nicht berechenbar (division durch 0). 
Statt dessen betrachtet man eine Vielzahl von Sekanten, wobei man den Abstand 
zum interessierenden Punkt x0 immer mehr verkleinert. Je näher man sich bei x0
befindet desto ähnlichesr werden Sekante und Tangente (anstieg der Tangente sowie 
anstieg Sekante).
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Funktion
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f: (x^3/5) - ((2*x^2)/5) -3*x;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Tangente
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
tw1: -49/15 * x + 8/135;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
x0 Der Startpunkt
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x0: [2/3,-286/135];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Der zweite Punkt
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x1: [-3, subst(-3, x, f)];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Berechnung des Steigung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
k1: (subst(x1[1], x, f) - subst(x0[1], x, f))/(x1[1]-x0[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Ergebnis der Steigung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
erg1: solve(subst([y=subst(x1[1], x, f), x=x1[1], k1=k1], y = k1*x + d), d);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Umformen in eine Funktion
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
sekante1: k1*x + rhs(erg1[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Der Dritte Punkt
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x2: [-2, subst(-2, x, f)];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Berechnung des Steigung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
k2: (subst(x2[1], x, f) - subst(x0[1], x, f))/(x2[1]-x0[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Ergebnis der Steigung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
erg2: solve(subst([y=subst(x2[1], x, f), x=x2[1], k1=k2], y = k2*x + d), d);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Umformen in eine Funktion
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
sekante2: k2*x + rhs(erg2[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Der Vierte Punkt
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x3: [-1, subst(-1, x, f)];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Berechnung des Steigung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
k3: (subst(x3[1], x, f) - subst(x0[1], x, f))/(x3[1]-x0[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Ergebnis der Steigung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
erg3: solve(subst([y=subst(x3[1], x, f), x=x3[1], k1=k3], y = k3*x + d), d);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Umformen in eine Funktion
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
sekante3: k3*x + rhs(erg3[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die Zeichnung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
wxplot2d([f,
[discrete,[x0]],
tw1,sekante1,sekante2,sekante3],
[x,-4,3],[y,-5,5],
[style,[lines,1,1],[points,4,2,2],[lines,1,2,1],[lines,1,3,1],[lines,1,4,1],[lines,1,5,1],[lines,1,6,1]],
[legend,"f(x)","x0","Tangente","s1 mit x1",
"s2 mit x2","s3 mit x3"]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Man schiebt x1 -> x2 -> x3 -> x4 
    => k1 -> k2 -> k3 -> k4
Anstieg der Tangente  = Diffenrentialquotient /Annäherung an die Tangente mit dem Limes
ohne dem Limes, also nur die Division der Differenzen ist es der Differenzenquotient 
kT = lim (delta y / delta x) = lim (f(x1) - f(x0)) / (x1 - x0) 
   delta x->0                delta x->0
   [wxMaxima: comment end   ] */

/* [wxMaxima: fold    end   ] */

/* [wxMaxima: section start ]
Kurvendiskussion
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
Wie ist eine Kurvendiskussion aufgebaut
   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]
Vorgehensweise bei einer Kurvendiskussion
1.) bilden der Funktion und deren 1. und 2. Ableitung
    y = f(x)    y = f'(x)   y = f''(x)
2.)Bestimmen der Definitionsmenge
3.)Nullstellen N 
    f(x) = 0 => xn1,xn2,... => N1(xn1|0),N2(xn2|0),...
4.) Extremwerte E (Lokale minima und maxima)
    f'(x) = 0 => xe1,xe2,... => E1(xe1|f(xe1),E2(xe2|f(xe2),...
5.)Entscheidung der minimum und maximum
    f''(xe) > 0 => E ist ein Minimum
    f''(xe) < 0 => E ist ein Maximum
6.)Wendepunkt W
    f''(x) = 0 => xw1,xw2,...=> W1(xw1|f(xw1),W2(xw2|f(xw2),...
7.)Wendetangenten tw1,tw2,...
    tw1: w1Etw1,k = f'(xw1)
    tw2: w2Etw2,k = f'(xw2)
    ...
8.)Bei gebrochenrationalen funktionen ist zusätzlich zu untersuchen die 
    unstätigkeitsstellen (Polen, Lücken) sowie (bei Lücken) die stätige Ergänzung
    Asymptoten ebenfalls
9.)Asymptoten
    f(x) = z(x)/N(x)wobei grad(z(x)) = n, grad(n(x)) = m
    m > n Asymptote = x-Achse
    m = n Asymptote y = (a*n / b*n) * x
    m < n Asymptote ist der ganzzahlige Teil des Ergebnisses der Polynomdivision Z(x)/N(x)
    f(x) = x/(x^2+2) x-Achse
    f(x) = (4*x^7+2)/(3*x^7) y = (4/3)*x
    f(x) = x^7/(x^2+2) => x^7/(x^2+2)
   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]
Beispiel
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
schreiben der Funktion
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f: ((x^3)-(2*x^2)-15*x)/5;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Differenzieren der Funktion
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f1: diff(f,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
f2: diff(f1,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Definitionsmenge berechnen
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
In diesem Fall nicht sinnvoll
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Nullstellen suchen
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
fN: solve(f=0,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Nullstellen trennen
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
N1: [rhs(fN[1]),0];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
N2: [rhs(fN[2]),0];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
N3: [rhs(fN[3]),0];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
ExtremWerte suchen
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
fE: solve(f1=0,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Extremwerte trennen und deren y-Werte berechnen
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
E1: [rhs(fE[1]),subst(rhs(fE[1]),x,f)];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
E2: [rhs(fE[2]),subst(rhs(fE[2]),x,f)];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Berechnung welcher Extrempunkt Minimum und Maximum ist
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
E1wert: subst(rhs(fE[1]),x,f2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Da der E1wert < 0 ist folgt daraus das dieser Wert das Maximum
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
E2wert: subst(rhs(fE[2]),x,f2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Da der E1wert > 0 ist folgt daraus das dieser Wert das Minimum
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Wendepunkt berechnen
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
fW: solve(f2=0,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
W1: [rhs(fW[1]),subst(rhs(fW[1]),x,f)];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Wendetangente
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Steigung der Tangente ausrechnen
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
k1: subst(rhs(fW[1]),x,f1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
d berechnen von der Formel y=kx+d
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
d1: subst(W1[1],x,f)-k1*W1[1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
tangente berechnen
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
tw1: k1*x+d1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
Zeichnung
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
wxplot2d([f,
[discrete, [N1]],[discrete, [N2]],[discrete, [N3]],
[discrete, [E1]],[discrete, [E2]],
[discrete, [W1]],
tw1],
[x,-6,7],[y,-20,20],
[style,[],[points,2,2,3],[points,2,2,3],[points,2,2,3],
[points,2,3,1],[points,2,3,1],
[points,2,4,2],
[lines,1,3,1]],
[legend, f, n1, n2, n3, e1, e2, w1, Tw1], 
[gnuplot_preamble, "set grid;"]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
Die Werte die nach den Berechnungen entstanden sind
   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]
Die Funktion
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die 1. Ableitung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die 2. Ableitung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Der 1.  Nullpunkt
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
N1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Der 2. Nullpunkt
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
N2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Der 3. Nullpunkt
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
N3;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Der 1. Extremewert
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
E1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Der 2. Extremewert
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
E2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Der 1. Wendepunkt
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
W1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die 1. Wendetangente
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
tw1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Umgekehrte Kurvendiskussion
   [wxMaxima: section end   ] */

/* [wxMaxima: fold    start ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
Wie ist eine umgekehrte Kurvendiskussion aufgebaut
   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]
Die Umgekehrte Kurvendiskussion funktioniert ähnlich wie die normale Kurvendiskussion,
nur anstatt eine Funktion zu haben und dessen Punkte auszurechnen hat man eine Angabe
aus der man mittels den Gesetzen der Kurvendisskussion Rechnungen für die Funktion 
bekommen. Mit diesen Werten die so viele sein sollten wie buchstaben in der Funktion,
(a,b,c,d,e,...) werden dann eben diese mittels gleichsetzungsverfahren, 
eliminationsverfahren, etc. gelöst. dadurch bekommen wir dann die Funktion die wir suchen.
   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]
Beispiel
   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]
P1(4|48), P2(-2|0), f'(4) = 26, f''(-2) = 0
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Vorbereitung : die Funktionen
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f: a*x^3+b*x^2+c*x+d;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die 1. Ableitung der Funktion
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f1: diff(f,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die 2. Ableitung der Funktion
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f2: diff(f1,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Erste Funktion wir haben einen punkt der Funktion 
bedeutet wir wissen die x und y koordinate
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
P1: [4,48];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
fP1: subst([x=P1[1]],f)=P1[2];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Zweite Funktion wir haben einen punkt der Funktion 
bedeutet wir wissen die x und y koordinate
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
P2: [-2,0];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Ist gleichzeitig ein Nullpunkt der Funktion da die y-Koordinate 0 ist
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
fP2: subst([x=P2[1]],f)=P2[2];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Dritte Funktion wir haben eine Steigung die man mittels der 1. abgeleiteten Funktion 
löst
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
fP1k1: subst([x=P1[1]],f1)=26;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Vierte Funktion wir haben einen Wendepunkt den man mittels der 2. abgeleiteten Funktion 
 = 0 löst
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
fP2w1: subst([x=P2[1]],f2)= 0;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die buchstaben der Funktionen a,b,c,d
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
erg: solve([fP1,fP2,fP1k1,fP2w1],[a,b,c,d]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die fertige Funktion
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
fFertig: subst([erg],f);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die Differenzierungen
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f1: diff(fFertig,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
f2: diff(f1,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die Wendepunkte
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
fW: solve(f2=0,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
W1: [rhs(fW[1]),subst(rhs(fW[1]),x,fFertig)];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die Steigung (tangente)
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
k1: subst(4,x,f1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
d1: subst(4,x,fFertig)-k1*4;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
tw1: k1*x+d1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Angabe: Eine Polynomfunktion dritten Grades hat in P1(4|48) den Anstieg k = 26.
Ferner besitzt sie im Punkt P2(-2|0) einen Wendepunkt
   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]
Zeichnung
   [wxMaxima: subsect end   ] */

/* [wxMaxima: input   start ] */
wxplot2d([fFertig,
[discrete, [P1]],[discrete, [P2]],
[discrete, [W1]],
tw1],
[x,-10,10],[y,-20,60],
[style,[],[points,2,2,4],[points,2,2,4],
[points,3,3,3],
[lines,1,4,3]],
[legend, fFertig, p1, p2, w1, tw1],
[gnuplot_preamble, "set grid;"]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
Die Werte die nach den Berechnungen entstanden sind
   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]
Die Funktion
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
fFertig;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die 1. Ableitung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die 2. Ableitung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
f2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Der 1. Punkt
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
P1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Der 2. Punkt
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
P2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Der 1. Wendepunkt
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
W1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Die Tangente des Punktes
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
tw1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: fold    end   ] */

/* [wxMaxima: section start ]
Extremwertaufgabe
   [wxMaxima: section end   ] */

/* [wxMaxima: fold    start ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: subsect start ]
Wie ist eine Extremwertaufgabe aufgebaut
   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]
Wird benutzt um etwas zu berechnen was so groß wie möglich oder so 
klein wie möglich sein soll.

Lösungsweg Allgemein:

1.)Aufstellung der HauptBedingung (HB): Was soll maximal bzw. minimal werden. Darstellung
in Variablen.
2.)Aufstellung der Nebenbedingung (NB): Falls in der Hauptbedingung mehr als 1 Variable
vorkommt ist ein zusammenhang der Variablen zu finden.
3.)Einsetzen der Nebenbedingung in die Hauptbedingung um die Zahl der Variablen zu 
reduzieren.
4.)HB lösen wir mithilfe der differentialgleichung von den Extremwertfinden.
5.)Um herauszufinden ob es das Maximum bzw. Minimum ist benötigt man die 2. Abteilung
6.)Das ermitteln der anderen Variable erfolgt durch das einsetzen in die NB
7.)Ermitteln des Extremwertes und definieren der Antwort 
(ACHTUNG: Verwenden von EInheiten in der Antwort)
   [wxMaxima: comment end   ] */

/* [wxMaxima: subsect start ]
Beispiel
   [wxMaxima: subsect end   ] */

/* [wxMaxima: comment start ]
Ein Sportplatz ist so zu definieren das bei einer laufstrecke von 400m 
die rechteckige fläche innerhalb des feldes eine max. Fläche hat.
Wobei zu beachten ist das die Ränder zusammen 2 Halbkreise ergeben.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
HB: A1 = x*2y
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
NB: 2*PI*y+2x = 400m
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Schreiben der Hauptbedingung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
HB: x*2*y;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Schreiben der Nebenbedingung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
NB: 2*%pi*y+2*x = 400;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Benutzen der gleichsetzungsformel
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Errechnen des Wertes x mit des zweiten wertes y darin
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
x1: solve(NB,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Einsetzen in der Nebenbedingung
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
temp: ratsimp(subst([x=rhs(x1[1])],HB));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Differenzierung der Nebenformel mit = 0 darangehängt um einen Extremwert zu bekommen
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
temp1: diff(temp,y)=0;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Errechnen der ersten Variable
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
yErg: solve(temp1,y);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Errechnen der zweiten Variable
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
xErg: solve(subst([y=rhs(yErg[1])],x1),x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Überprüfen ob es ein Maximum oder ein Minimum ist
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
Antw: diff(lhs(temp1),y);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
A: Es ist kleiner als 0 deswegen ist es ein Maximum.
Die gerade Laufstrecke ist 100 m lang und der Radius ist 100/PI m groß.
Das sind die Maße um dei fläche in der Mitte zum Maximum zu bringen.
   [wxMaxima: comment end   ] */

/* [wxMaxima: fold    end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
